/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ajeet
 */
import com.opencsv.CSVWriter;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import javax.swing.*;
import java.sql.*;
import java.util.ArrayList;
import java.util.Set;
import java.util.TreeMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.text.Document;
import javax.swing.filechooser.*;
import javax.swing.table.DefaultTableModel;


import net.proteanit.sql.DbUtils;
import org.apache.poi.hssf.usermodel.HSSFFont;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFFont;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
public class AddEmployee extends javax.swing.JFrame{

    
    Connection conn = null;
    ResultSet rs = null;
    PreparedStatement pst = null;
    
    public AddEmployee() {
        initComponents();
        txtEmpId.setEditable(false);
        txtNotes.setLineWrap(true);
        txtNotes.setWrapStyleWord(true);
        conn = JavaConnect.ConnectorDB();
    }
    
       private void updateTable() {
        
        try 
        {
          String sql = "select * from employeeDetails ";
           pst = conn.prepareStatement(sql); 
           //pst.setString(1,searchTextField.getText());
           rs = pst.executeQuery();
           System.out.println(rs);
           addEmployeeTable.setModel(DbUtils.resultSetToTableModel(rs));
           
           
           
        } catch(Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            try {
                rs.close();
                pst.close();
           
            } catch(Exception e) {
                
            }
        }
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jFrame1 = new javax.swing.JFrame();
        jCheckBox1 = new javax.swing.JCheckBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        addEmployeeTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        btnShowAll = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        searchTextField = new javax.swing.JTextField();
        btnReset = new javax.swing.JButton();
        saveContactBtn = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        searchButtonInAddEmp = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        panelPersonalInformation = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtEmpId = new javax.swing.JTextField();
        txtLastName = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtMiddleName = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        txtGender = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        txtWebsite = new javax.swing.JTextField();
        txtDesignation = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtCategory = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtNotes = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        panelContactdetails = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtMobileNumber = new javax.swing.JTextField();
        txtAddressLine2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        txtAddressLine1 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtLandlineNumber = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtSkypeId = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jCheckBox1.setText("jCheckBox1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        addEmployeeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        addEmployeeTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addEmployeeTableMouseClicked(evt);
            }
        });
        addEmployeeTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                addEmployeeTableKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(addEmployeeTable);

        btnShowAll.setIcon(new javax.swing.ImageIcon(getClass().getResource("/showAll.png"))); // NOI18N
        btnShowAll.setText("Show All");
        btnShowAll.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnShowAll.setPreferredSize(new java.awt.Dimension(70, 22));
        btnShowAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowAllActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagePackage/home.png"))); // NOI18N
        jButton1.setText("Home");
        jButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/delete.png"))); // NOI18N
        jButton2.setText("Delete");
        jButton2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        searchTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchTextFieldKeyReleased(evt);
            }
        });

        btnReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagePackage/reset.png"))); // NOI18N
        btnReset.setText("Reset");
        btnReset.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnReset.setPreferredSize(new java.awt.Dimension(60, 22));
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        saveContactBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagePackage/add.png"))); // NOI18N
        saveContactBtn.setText("Add");
        saveContactBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        saveContactBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveContactBtnActionPerformed(evt);
            }
        });

        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagePackage/update.png"))); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        searchButtonInAddEmp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagePackage/search.png"))); // NOI18N
        searchButtonInAddEmp.setText("Search");
        searchButtonInAddEmp.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        searchButtonInAddEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonInAddEmpActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchButtonInAddEmp, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(saveContactBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnShowAll, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(saveContactBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnShowAll, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnReset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(searchButtonInAddEmp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(searchTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)))
        );

        panelPersonalInformation.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Personal Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Muna", 1, 14), new java.awt.Color(51, 0, 204))); // NOI18N

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 3, 13)); // NOI18N
        jLabel5.setText("Gender");

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 3, 13)); // NOI18N
        jLabel6.setText("First Name");

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 3, 13)); // NOI18N
        jLabel7.setText("Last Name");

        jLabel8.setFont(new java.awt.Font("Lucida Grande", 3, 13)); // NOI18N
        jLabel8.setText("Middle Name");

        jLabel9.setFont(new java.awt.Font("Lucida Grande", 3, 13)); // NOI18N
        jLabel9.setText("Person ID");

        javax.swing.GroupLayout panelPersonalInformationLayout = new javax.swing.GroupLayout(panelPersonalInformation);
        panelPersonalInformation.setLayout(panelPersonalInformationLayout);
        panelPersonalInformationLayout.setHorizontalGroup(
            panelPersonalInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPersonalInformationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelPersonalInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel7)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelPersonalInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPersonalInformationLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(txtEmpId, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtFirstName, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtMiddleName)
                    .addComponent(txtLastName)
                    .addComponent(txtGender))
                .addContainerGap())
        );
        panelPersonalInformationLayout.setVerticalGroup(
            panelPersonalInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPersonalInformationLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(panelPersonalInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEmpId, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelPersonalInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(panelPersonalInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtMiddleName, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(panelPersonalInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(panelPersonalInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtGender, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Professional Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 3, 14), new java.awt.Color(0, 0, 255))); // NOI18N

        txtWebsite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtWebsiteActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Lucida Grande", 3, 13)); // NOI18N
        jLabel10.setText("Designation");

        txtNotes.setColumns(20);
        txtNotes.setRows(5);
        jScrollPane3.setViewportView(txtNotes);

        jLabel11.setFont(new java.awt.Font("Lucida Grande", 3, 13)); // NOI18N
        jLabel11.setText("Website");

        jLabel12.setFont(new java.awt.Font("Lucida Grande", 3, 13)); // NOI18N
        jLabel12.setText("Category");

        jLabel13.setFont(new java.awt.Font("Lucida Grande", 3, 13)); // NOI18N
        jLabel13.setText("Notes");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtWebsite)
                    .addComponent(txtDesignation)
                    .addComponent(txtCategory)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDesignation, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtWebsite, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel13))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelContactdetails.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Contact Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Muna", 1, 14), new java.awt.Color(51, 0, 204))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 3, 13)); // NOI18N
        jLabel4.setText("Address Line 2");

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 3, 13)); // NOI18N
        jLabel1.setText("Mobile Number");

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 3, 13)); // NOI18N
        jLabel3.setText("Address Line 1");

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 3, 13)); // NOI18N
        jLabel2.setText("Email Id");

        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Lucida Grande", 3, 13)); // NOI18N
        jLabel14.setText("Landline Number");

        txtLandlineNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLandlineNumberActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Lucida Grande", 3, 13)); // NOI18N
        jLabel15.setText("Skype Id");

        txtSkypeId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSkypeIdActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelContactdetailsLayout = new javax.swing.GroupLayout(panelContactdetails);
        panelContactdetails.setLayout(panelContactdetailsLayout);
        panelContactdetailsLayout.setHorizontalGroup(
            panelContactdetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelContactdetailsLayout.createSequentialGroup()
                .addGroup(panelContactdetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelContactdetailsLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(panelContactdetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panelContactdetailsLayout.createSequentialGroup()
                                .addGroup(panelContactdetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(67, 67, 67)
                                .addGroup(panelContactdetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtEmail)
                                    .addComponent(txtSkypeId)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelContactdetailsLayout.createSequentialGroup()
                                .addGroup(panelContactdetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addGap(18, 18, 18)
                                .addGroup(panelContactdetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtMobileNumber, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtLandlineNumber, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(panelContactdetailsLayout.createSequentialGroup()
                        .addGroup(panelContactdetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addGap(49, 49, 49)
                        .addGroup(panelContactdetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtAddressLine1, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                            .addComponent(txtAddressLine2))))
                .addGap(29, 29, 29))
        );
        panelContactdetailsLayout.setVerticalGroup(
            panelContactdetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelContactdetailsLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(panelContactdetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMobileNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelContactdetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLandlineNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelContactdetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(txtEmail))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelContactdetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSkypeId, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelContactdetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(txtAddressLine1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelContactdetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAddressLine2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelPersonalInformation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(panelContactdetails, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelContactdetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelPersonalInformation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jMenu1.setText("Profile");

        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagePackage/editProfile.png"))); // NOI18N
        jMenuItem1.setText("Edit Profile");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagePackage/logout.png"))); // NOI18N
        jMenuItem2.setText("Log Out");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");
        jMenuBar1.add(jMenu2);

        jMenu3.setText("Report");

        jMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagePackage/exportToExcel.png"))); // NOI18N
        jMenuItem3.setText("Export To Excel");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem3);

        jMenuItem4.setText("Export To CSV");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem4);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 44, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(1279, 668));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
//       if (Login.isAdmin == true) {
//        Home home = new Home();
//        this.setVisible(false);
//        home.setVisible(true);
//        //Login.isAdmin = false;
//        } else {
//            Login login = new Login();
//            this.setVisible(false);
//            login.setVisible(true);
//            //Login.isAdmin = false;
//        }
            Login login = new Login();
            this.setVisible(false);
            login.setVisible(true);
    
    }//GEN-LAST:event_jButton1ActionPerformed

    private void saveContactBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveContactBtnActionPerformed
        // TODO add your handling code here:
        if(!txtFirstName.getText().isEmpty()){
        try {
            String sql = "insert into employeeDetails (firstName,middleName,lastName,category,designation,mobileNumber,email,skypeId,address1,address2,gender,landlineNumber,website,notes) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?) ";
           
            pst = conn.prepareStatement(sql); 
            
            pst.setString(1, txtFirstName.getText());
            pst.setString(2, txtMiddleName.getText());
            pst.setString(3, txtLastName.getText());
            
            if(!txtCategory.getText().isEmpty()){
                pst.setString(4, txtCategory.getText());
            } else {
                pst.setString(4, "None");
            }
            pst.setString(5, txtDesignation.getText());
            pst.setString(6, txtMobileNumber.getText());
            
            pst.setString(7, txtEmail.getText());
            pst.setString(8, txtSkypeId.getText());
            pst.setString(9, txtAddressLine1.getText());
            pst.setString(10, txtAddressLine2.getText());
            
            pst.setString(11, txtGender.getText());
            pst.setString(12, txtLandlineNumber.getText());
            pst.setString(13, txtWebsite.getText());
            pst.setString(14, txtNotes.getText());
            
            
            pst.execute();
            
           JOptionPane.showMessageDialog(null, "Saved");
           
        } catch(Exception e) {
             JOptionPane.showMessageDialog(null, "Not Saved");
        } finally {
           try {
                //rs.close();
                pst.close();
           
            } catch(Exception e) {
                JOptionPane.showMessageDialog(null, e);
            } 
        }
        updateTable();
        } else {
            JOptionPane.showMessageDialog(null, "Cannot be save without any data");
        }
    }//GEN-LAST:event_saveContactBtnActionPerformed

    private void searchButtonInAddEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonInAddEmpActionPerformed
        // TODO add your handling code here:
        try 
        {
          String sql = "select * from employeeDetails where firstName LIKE '%"+searchTextField.getText()+"%'";
           pst = conn.prepareStatement(sql); 
           //pst.setString(1,searchTextField.getText());
           rs = pst.executeQuery();
           System.out.println(rs);
           addEmployeeTable.setModel(DbUtils.resultSetToTableModel(rs));
           
           
           
        } catch(Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } 
        
    }//GEN-LAST:event_searchButtonInAddEmpActionPerformed

    private void addEmployeeTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addEmployeeTableMouseClicked
        // TODO add your handling code here:
                try {
            
            int row = addEmployeeTable.getSelectedRow();
            String tableClick = (addEmployeeTable.getModel().getValueAt(row, 0).toString());
            String sql = "select * from employeeDetails where empId = '"+tableClick+"'";
           pst = conn.prepareStatement(sql); 
           rs = pst.executeQuery();
           
           if(rs.next()) {
               String empId = rs.getString("empId");
               txtEmpId.setText(empId);
               
               String firstName = rs.getString("firstName");
               txtFirstName.setText(firstName);
               
               String middleName = rs.getString("middleName");
               txtMiddleName.setText(middleName);
               
               String lastName = rs.getString("lastName");
               txtLastName.setText(lastName);
               
               String gender = rs.getString("gender");
               txtGender.setText(gender);
               
               String designation = rs.getString("designation");
               txtDesignation.setText(designation);
               
               String website = rs.getString("website");
               txtWebsite.setText(website);
               
               String category = rs.getString("category");
               txtCategory.setText(category);
               
               String notes = rs.getString("notes");
               txtNotes.setText(notes);
               
               String mobileNumber = rs.getString("mobileNumber");
               txtMobileNumber.setText(mobileNumber);
               
               String landlineNumber = rs.getString("landlineNumber");
               txtLandlineNumber.setText(landlineNumber);
               
               String email = rs.getString("email");
               txtEmail.setText(email);
               
               String skype = rs.getString("skypeId");
               txtSkypeId.setText(skype);
               
               String addressLine1 = rs.getString("address1");
               txtAddressLine1.setText(addressLine1);
               
               String addressLine2 = rs.getString("address2");
               txtAddressLine2.setText(addressLine2);
           }
            
        } catch(Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            try {
                rs.close();
                pst.close();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, e);
            }
            
        }
    }//GEN-LAST:event_addEmployeeTableMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if(!txtFirstName.getText().isEmpty()){
        int p = JOptionPane.showConfirmDialog(null, "Do you really want to delete!!","Delete",JOptionPane.YES_NO_OPTION);
        if(p == 0) {
        try{
            String sql = "delete from employeeDetails where empId = ?";
            pst = conn.prepareStatement(sql); 
           pst.setString(1,txtEmpId.getText());
           
           pst.execute();
           JOptionPane.showMessageDialog(null, "Deleted");
        }catch(Exception e){
            
        }finally {
            try {
                rs.close();
                pst.close();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
        updateTable(); 
        }
        } else {
            JOptionPane.showMessageDialog(null, "Please select any row to delete"); 
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:

               txtEmpId.setText("");
               txtFirstName.setText("");
               txtMiddleName.setText("");
               txtLastName.setText("");
               txtGender.setText("");
               
               txtDesignation.setText("");
               txtCategory.setText("");
               txtWebsite.setText("");
               txtNotes.setText("");
               
               txtMobileNumber.setText("");
               txtLandlineNumber.setText("");
               txtEmail.setText("");
               txtSkypeId.setText("");
               txtAddressLine1.setText("");
               txtAddressLine2.setText("");
               
               DefaultTableModel dm = (DefaultTableModel) addEmployeeTable.getModel();

                while(dm.getRowCount()>0){
                    dm.removeRow(0);
                }

               
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnShowAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowAllActionPerformed
        // TODO add your handling code here:
        try 
        {
          String sql = "select * from employeeDetails ";
           pst = conn.prepareStatement(sql); 
           //pst.setString(1,searchTextField.getText());
           rs = pst.executeQuery();
           //System.out.println(rs);
           addEmployeeTable.setModel(DbUtils.resultSetToTableModel(rs));
           
           
           
        } catch(Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            try {
                rs.close();
                pst.close();
           
            } catch(Exception e) {
                
            }
        }
        
    }//GEN-LAST:event_btnShowAllActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        
        try 
        {
            String empId = txtEmpId.getText();
            String fn = txtFirstName.getText();
            String mn = txtMiddleName.getText();
            String ln = txtLastName.getText();
            String gn = txtGender.getText();
            
            String designation = txtDesignation.getText();
            String website = txtWebsite.getText();
            
            String category = "";
            if(!txtCategory.getText().isEmpty()){
                category = txtCategory.getText();
            } else {
                 category = "None";
            }
            //String category = txtCategory.getText();
            String notes = txtNotes.getText();
            
            String mobileNumber = txtMobileNumber.getText();
            String landlineNumber = txtLandlineNumber.getText();
            String email = txtEmail.getText();
            String skypeId = txtSkypeId.getText();
            String ad1 = txtAddressLine1.getText();
            String ad2 = txtAddressLine2.getText();
          String sql = "update employeeDetails set firstName = '"+fn+"', middleName = '"+mn+"',lastName = '"+ln+"',category = '"+category+"',designation = '"+designation+"',mobileNumber = '"+mobileNumber+"',email = '"+email+"',skypeId = '"+skypeId+"',address1 = '"+ad1+"',address2 = '"+ad2+"',gender = '"+gn+"',landlineNumber = '"+landlineNumber+"',website = '"+website+"',notes = '"+notes+"' where empId = '"+empId+"'";
           pst = conn.prepareStatement(sql); 
           
           pst.execute();
           
           JOptionPane.showMessageDialog(null, "Updated");
           
           
        } catch(Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            try {
                rs.close();
                pst.close();
           
            } catch(Exception e) {
                
            }
        }
        updateTable();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void searchTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTextFieldKeyReleased
        // TODO add your handling code here:
        
        try 
        {
          String sql = "select * from employeeDetails where firstName LIKE '%"+searchTextField.getText()+"%'";
           pst = conn.prepareStatement(sql); 
           //pst.setString(1,searchTextField.getText());
           rs = pst.executeQuery();
           System.out.println(rs);
           addEmployeeTable.setModel(DbUtils.resultSetToTableModel(rs));
           
           
           
        } catch(Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } 
        
        
    }//GEN-LAST:event_searchTextFieldKeyReleased

    private void addEmployeeTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addEmployeeTableKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_DOWN  || evt.getKeyCode() == KeyEvent.VK_UP) {
           try {
            
            int row = addEmployeeTable.getSelectedRow();
            String tableClick = (addEmployeeTable.getModel().getValueAt(row, 0).toString());
            String sql = "select * from employeeDetails where empId = '"+tableClick+"'";
           pst = conn.prepareStatement(sql); 
           rs = pst.executeQuery();
           
           if(rs.next()) {
               String empId = rs.getString("empId");
               txtEmpId.setText(empId);
               
               String firstName = rs.getString("firstName");
               txtFirstName.setText(firstName);
               
               String middleName = rs.getString("middleName");
               txtMiddleName.setText(middleName);
               
               String lastName = rs.getString("lastName");
               txtLastName.setText(lastName);
               
               String gender = rs.getString("gender");
               txtGender.setText(gender);
               
               String designation = rs.getString("designation");
               txtDesignation.setText(designation);
               
               String website = rs.getString("website");
               txtWebsite.setText(website);
               
               String category = rs.getString("category");
               txtCategory.setText(category);
               
               String notes = rs.getString("notes");
               txtNotes.setText(notes);
               
               String mobileNumber = rs.getString("mobileNumber");
               txtMobileNumber.setText(mobileNumber);
               
               String landlineNumber = rs.getString("landlineNumber");
               txtLandlineNumber.setText(landlineNumber);
               
               String email = rs.getString("email");
               txtEmail.setText(email);
               
               String skype = rs.getString("skypeId");
               txtSkypeId.setText(skype);
               
               String addressLine1 = rs.getString("address1");
               txtAddressLine1.setText(addressLine1);
               
               String addressLine2 = rs.getString("address2");
               txtAddressLine2.setText(addressLine2);
           }
            
        } catch(Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            try {
                rs.close();
                pst.close();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, e);
            }
            
        }
       }
    }//GEN-LAST:event_addEmployeeTableKeyPressed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        EditUserProfile editUserProfile = new EditUserProfile();
        this.setVisible(false);
        editUserProfile.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
            Login login = new Login();
            this.setVisible(false);
            login.setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

        private String getCellValueAt(int x, int y) {
            if(addEmployeeTable.getValueAt(x, y) != null){
                return addEmployeeTable.getValueAt(x, y).toString();
            }else {
                return "";
            }
    }
    private void writeToExel(String filePath) {
        XSSFWorkbook wb = new XSSFWorkbook();
        XSSFSheet ws = wb.createSheet();
        
                XSSFFont font= wb.createFont();
                font.setFontHeightInPoints((short)10);
                font.setFontName("Arial");
                font.setColor(IndexedColors.WHITE.getIndex());
                font.setBold(true);
                font.setItalic(false);
                

        try {
            //Load data to tree map
            CellStyle style=null;
            XSSFRow row;
            
            TreeMap<String, Object[]> data = new TreeMap<>();
            data.put("-1", new Object[]{addEmployeeTable.getColumnName(0), addEmployeeTable.getColumnName(1), addEmployeeTable.getColumnName(2), addEmployeeTable.getColumnName(3), addEmployeeTable.getColumnName(4), addEmployeeTable.getColumnName(5), addEmployeeTable.getColumnName(6), addEmployeeTable.getColumnName(7), addEmployeeTable.getColumnName(8),addEmployeeTable.getColumnName(9),addEmployeeTable.getColumnName(10),addEmployeeTable.getColumnName(11),addEmployeeTable.getColumnName(12),addEmployeeTable.getColumnName(13),addEmployeeTable.getColumnName(14)});
            
            for (int i = 0; i < addEmployeeTable.getRowCount(); i++) {

                data.put(Integer.toString(i), new Object[]{getCellValueAt(i, 0), getCellValueAt(i, 1), getCellValueAt(i, 2), getCellValueAt(i, 3), getCellValueAt(i, 4), getCellValueAt(i, 5), getCellValueAt(i, 6), getCellValueAt(i, 7), getCellValueAt(i, 8),getCellValueAt(i, 9),getCellValueAt(i, 10),getCellValueAt(i, 11),getCellValueAt(i, 12),getCellValueAt(i, 13),getCellValueAt(i, 14)});
            }

            //Writing data to file
            Set<String> ids = data.keySet();
            
            int rowId = 0;
            for (String key : ids) {
                row = ws.createRow(rowId++);

                //get data as per the key
                Object[] values = data.get(key);
                int cellId = 0;
                for (Object o : values) {
                    Cell cell = row.createCell(cellId++);
                    cell.setCellValue(o.toString());

                }
            }

            //Write Excel to file system
            try {
                FileOutputStream fos = new FileOutputStream(new File(filePath + ".xlsx"));
                wb.write(fos);
                fos.close();
                JOptionPane.showMessageDialog(null, "Exported as Excel in the specified path");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Problem in storing the file");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "There is no data to Export");
        }
    }
    
    private void writeToCSV(String filePath) {
        try {
            ArrayList<String[]> entries = new ArrayList<>();
            String[] items1 = {addEmployeeTable.getColumnName(0).toString(), addEmployeeTable.getColumnName(1).toString(), addEmployeeTable.getColumnName(2).toString(), addEmployeeTable.getColumnName(3).toString(), addEmployeeTable.getColumnName(4).toString(), addEmployeeTable.getColumnName(5).toString(), addEmployeeTable.getColumnName(6).toString(), addEmployeeTable.getColumnName(7).toString(), addEmployeeTable.getColumnName(8).toString(),addEmployeeTable.getColumnName(9).toString(),addEmployeeTable.getColumnName(10).toString(),addEmployeeTable.getColumnName(11).toString(),addEmployeeTable.getColumnName(12).toString(),addEmployeeTable.getColumnName(13).toString(),addEmployeeTable.getColumnName(14).toString()};
            entries.add(items1);
            //JOptionPane.showMessageDialog(null, getCellValueAt(0, 9));
            for (int i = 0; i < addEmployeeTable.getRowCount(); i++) {
                String[] items3 = {getCellValueAt(i, 0), getCellValueAt(i, 1), getCellValueAt(i, 2), getCellValueAt(i, 3), getCellValueAt(i, 4), getCellValueAt(i, 5), getCellValueAt(i, 6), getCellValueAt(i, 7), getCellValueAt(i, 8), getCellValueAt(i, 9),getCellValueAt(i, 10),getCellValueAt(i, 11),getCellValueAt(i, 12),getCellValueAt(i, 13),getCellValueAt(i, 14)};
                entries.add(items3);
            }

            //String fileName = "items.csv";

            try (CSVWriter writer = new CSVWriter(new FileWriter(filePath + ".csv"))) {
                writer.writeAll(entries);
                JOptionPane.showMessageDialog(null, "Exported as CSV in the specified path");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Problem in storing the file "+e);
        }
    }
    
    public static boolean isEmpty(JTable jTable) {
        if (jTable != null && jTable.getModel() != null) {
            return jTable.getModel().getRowCount()<=0?true:false;
        }
        return false;
    }
    
    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        System.out.println(addEmployeeTable.getModel().getRowCount());
// TODO add your handling code here:
        if(addEmployeeTable.getModel().getRowCount() != 0){
        String filePath = "";
        JFileChooser fs = new JFileChooser(new File(""));
        fs.setDialogTitle("Save File");
        fs.setFileFilter(new FileTypeFilter(".xlsx","Excel file"));
        int result = fs.showSaveDialog(null);
        if(result == JFileChooser.APPROVE_OPTION){
            File fi = fs.getSelectedFile();
            filePath = fi.getPath();
            JOptionPane.showMessageDialog(null, filePath);
            writeToExel(filePath);
        } else {
            //JOptionPane.showMessageDialog(null, "Not able to get the directory ");
        }
        } else {
            JOptionPane.showMessageDialog(null, "There is no data to Export");
        }
        
        
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed

    private void txtWebsiteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtWebsiteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtWebsiteActionPerformed

    private void txtLandlineNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLandlineNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLandlineNumberActionPerformed

    private void txtSkypeIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSkypeIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSkypeIdActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        
        if(addEmployeeTable.getModel().getRowCount() != 0){
        String filePath = "";
        JFileChooser fs = new JFileChooser(new File(""));
        fs.setDialogTitle("Save File");
        fs.setFileFilter(new FileTypeFilter(".csv","CSV file"));
        int result = fs.showSaveDialog(null);
        if(result == JFileChooser.APPROVE_OPTION){
            File fi = fs.getSelectedFile();
            filePath = fi.getPath();
            JOptionPane.showMessageDialog(null, filePath);
            writeToCSV(filePath);
        } else {
            //JOptionPane.showMessageDialog(null, "Not able to get the directory ");
        }
        } else {
            JOptionPane.showMessageDialog(null, "There is no data to Export");
        }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddEmployee().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable addEmployeeTable;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnShowAll;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JPanel panelContactdetails;
    private javax.swing.JPanel panelPersonalInformation;
    private javax.swing.JButton saveContactBtn;
    private javax.swing.JButton searchButtonInAddEmp;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JTextField txtAddressLine1;
    private javax.swing.JTextField txtAddressLine2;
    private javax.swing.JTextField txtCategory;
    private javax.swing.JTextField txtDesignation;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtEmpId;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtGender;
    private javax.swing.JTextField txtLandlineNumber;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtMiddleName;
    private javax.swing.JTextField txtMobileNumber;
    private javax.swing.JTextArea txtNotes;
    private javax.swing.JTextField txtSkypeId;
    private javax.swing.JTextField txtWebsite;
    // End of variables declaration//GEN-END:variables
}
